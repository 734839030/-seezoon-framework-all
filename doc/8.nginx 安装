下载地址
http://nginx.org/en/download.html
版本 nginx-1.14.0.tar.gz
cd /usr/local/
wget http://nginx.org/download/nginx-1.14.0.tar.gz

tar -zxvf nginx-1.14.0.tar.gz

安装基本依赖
yum -y install make gcc gcc-c++ gcc-g77 flex bison file libtool libtool-libs autoconf kernel-devel libjpeg libjpeg-devel libpng libpng-devel libpng10 libpng10-devel gd gd-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glib2 glib2-devel bzip2 bzip2-devel libevent libevent-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel gettext gettext-devel ncurses-devel gmp-devel pspell-devel unzip libcap lsof cmake pcre pcre-devel
cd nginx-1.14.0
./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_sub_module  --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module  --with-http_stub_status_module  --with-stream
make && make install


vim nginx.conf
参数调优
worker_processes  auto;


worker_rlimit_nofile 65535;

events {
    worker_connections 65535;
    multi_accept on;
    use epoll;
}

http {
	    sendfile        on;
	    tcp_nopush     on;
	    tcp_nodelay    on;
	    open_file_cache max=1024000 inactive=30s;
	    open_file_cache_valid 20s;
	    open_file_cache_min_uses 1;
	
	    keepalive_timeout 65;
	    keepalive_requests 8192;
	    client_body_buffer_size  512k;
	    proxy_connect_timeout    30;
	    proxy_read_timeout       300;
	    proxy_send_timeout       300;
	    proxy_buffer_size        64k;
	    proxy_buffers           4 64k;
	    proxy_busy_buffers_size 128k;
	    proxy_temp_file_write_size 128k;
	    proxy_temp_path /tmp;
	    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache_one:500m inactive=1d max_size=10g;
	    gzip on;
	    gzip_min_length 1k;
	    gzip_buffers 4 16k;
	    #gzip_http_version 1.0;
	    gzip_comp_level 6;
	    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/json  image/jpeg image/gif image/png;
	    gzip_vary off;
	    gzip_disable "MSIE [1-6]\.";
	    #多跨域支持，单域名直接写
	    map $http_origin $corsHost {
	    		default 0;
	        "~https://dev.seezoon.com" https://dev.seezoon.com;
	        "~http://dev.seezoon.com" http://dev.seezoon.com;
		}
}   

	 #强制跳转https
	 server {
        listen       80;
        server_name  loalhost;
        rewrite ^(.*)$  https://$host$1 permanent;
     }
	server {
		#ssl
	    ssl on;
        ssl_certificate   /usr/local/nginx/certification/dev/dev.pem;
        ssl_certificate_key  /usr/local/nginx/certification/dev/dev.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
		#跨域
		location / {
			add_header Access-Control-Allow-Origin $corsHost;
			add_header Access-Control-Allow-Credentials "true";
			add_header Access-Control-Allow-Headers "Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With";
			add_header Access-Control-Expose-Headers "*";
			add_header Access-Control-Allow-Methods "GET,POST,PUT,DELETE,OPTIONS";
			if ($request_method = "OPTIONS" ) {
				return 200;
			}
			add_header Access-Control-Max-Age 86400;
		}
	}

